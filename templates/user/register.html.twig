{% extends 'base.html.twig' %}

{% block title %} Register {% endblock %}
{% block header %}
    <header class="jumbotron my-4">
        {% if user and (user.id == '') %}
        <h1 class="display-3">Nouvel Utilisateur</h1>
        <p class="lead">Definir ci-dessous un nouvel utilisateur <br> ou préférer l'import massif via csv</p>
{#        <a href="#" class="btn btn-success btn-lg">bouton sample</a>#}
        <form id="upload-form">
            <label for="file">File</label> <input id="file" type="file" name="file">
            <input type="submit"  class="btn btn-success btn-sm text-dark">
            <span>Progress: <span id="progress-value"></span>% <span id="upload-complete"></span> <span id="errors"></span></span>
        </form>
            <span id="preview-title">format csv:</span>
            <pre><code id="preview-csv">campus_id; role_id; 'username'; 'mail@mail.com'; 'password'; 'firstname'; 'lastname'; 'phone';
campus_id; role_id; 'username'; 'mail@mail.com'; 'password'; 'firstname'; 'lastname'; 'phone';
campus_id; role_id; 'username'; 'mail@mail.com'; 'password'; 'firstname'; 'lastname'; 'phone';</code></pre>
        {% else %}
            <h1 class="display-3">Modification du profil administrateur</h1>
            <p class="lead">Modifier mon profil admin, Attention a mon role_admin</p>
        {% endif %}
    </header>
{% endblock %}
{% block body  %}
    {{ form_start(register_form) }}
    {{ form_widget(register_form) }}
    <button class="btn btn-success btn-lg btn-block" type="submit">Register</button>
    {{ form_end(register_form) }}

{% endblock %}

{% block javascripts %}
    <script>
        var xhr = new XMLHttpRequest();
        $(document).ready(() => {

            document.getElementById('upload-form').addEventListener('change', onChange);
            document.getElementById('upload-form').addEventListener('submit', onSubmit);
        });
        function onChange(event) {
            document.getElementById("file").files[0].text().then(function(data){
                let prevSize = 3;
                console.log(data);
                document.getElementById('preview-csv').innerText = '';
                document.getElementById('preview-title').innerText = 'Apercu du csv:';
                console.log(data.split("\n").length);
                let dataAr = data.split("\n")
                for (i=0;i<(dataAr.length<prevSize?dataAr.length:prevSize);i++){
                    document.getElementById('preview-csv').append(dataAr[i]+"\n");
                }
                document.getElementById('preview-csv').append("... cliquer sur Envoyer pour importer");
                showFlash('Fichier pret pour etre importé');

            }).catch(function(){
                alert('probleme avec le fichier')
                document.getElementById('preview-title').innerText = 'format csv:';
                document.getElementById('preview-csv').innerText = 'campus_id; role_id; \'username\'; \'mail@mail.com\'; \'password\'; \'firstname\'; \'lastname\'; \'phone\';\n' +
                    'campus_id; role_id; \'username\'; \'mail@mail.com\'; \'password\'; \'firstname\'; \'lastname\'; \'phone\';\n' +
                    'campus_id; role_id; \'username\'; \'mail@mail.com\'; \'password\'; \'firstname\'; \'lastname\'; \'phone\';';
            })
        }
        function onSubmit(event) {
            event.preventDefault();

            var formData = new FormData();
            formData.append("upload[file]", document.getElementById("file").files[0]);
            {#xhr = new XMLHttpRequest();#}
            {#xhr.open("POST", "{{ path('register_csv') }}");#}
            {#xhr.addEventListener('load', onRequestComplete, false);#}
            {#xhr.upload.addEventListener("load", onUploadComplete, false);#}
            {#xhr.upload.addEventListener("progress", onUploadProgress, false);#}
            {#xhr.send(formData);#}
            xhr = ajaxPost("{{ path('register_csv') }}",formData, function(data,err){
                let msg;
                if(err !== null){
                    console.log(err);
                    msg = err;
                }
                let jsonRep = JSON.parse(data);
                if(jsonRep){
                    // ok
                    console.log(jsonRep)
                    msg = jsonRep.toString();
                    setTimeout(function(){
                        window.location = "{{ path('register') }}";
                    },1000);

                } else {
                    // ko
                    msg = 'erreur inconnue';
                }
                showFlash(msg);
            },false);

            xhr.upload.addEventListener("load", onUploadComplete, false);
            xhr.upload.addEventListener("progress", onUploadProgress, false);
        }
        function onRequestComplete(evt) {
            console.log(xhr.response);
            $('#jsToast > .toast-body').html(xhr.response);
            $(".toast-js").toast('show');
            setTimeout(function(){
                window.location = "{{ path('register') }}";
            },1000);
            {#window.location = "{{ path('register') }}";#}
        }function onUploadComplete(evt) {
            showFlash('OK Upload Completed');
        }function onUploadProgress(evt) {
            document.getElementById('progress-value').innerHTML = evt.loaded * 100 / evt.total  ;
        }
    </script>
{% endblock %}

