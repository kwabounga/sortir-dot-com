<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        {#jquery#}
        <script src="{{ asset('js/jquery/jquery.js') }}"></script>
        {#bootstrap#}
        <link rel="stylesheet" href="{{ asset("js/bootstrap/css/bootstrap.min.css") }}">
        <script src="{{ asset('js/bootstrap/js/bootstrap.min.js') }}"></script>
        <script src="{{ asset('js/bootstrap/js/bootstrap.bundle.min.js') }}"></script>
        {#fontawesome#}
        <link rel="stylesheet" href="{{ asset('js/fontawesome/css/all.css') }}">
        {#filtresdynamiquecss#}
        <script src="{{ asset('js/filter_css.js') }}"></script>

        {#mapbox#}
        <script src='https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.js'></script>
        <link href='https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.css' rel='stylesheet' />

        <link rel="shortcut icon" href="{{ asset('img/logo_mini_22x30_white.png') }}">

        {#css commun#}
        {% include 'shared/css.html.twig' %}

        {#css in twig#}
        {% block stylesheets %}{% endblock %}

        <title>{% block title %}Sortir{% endblock %}</title>
    </head>

    <body>
        <div class="bg"></div>
        <header>
            {% include "shared/nav.html.twig" %}
        </header>
        <div class="container-fluid mb-3">
            <p class="title m-0 p-2 pl-3 bg-success">{{ title }}</p>
        </div>
        <div class="container">

            {% block header %}
                <div class="jumbotron my-4">
                    <h1 class="display-3">A remplacer</h1>
                    <p class="lead">en utilisant le block header {% verbatim %}{% block header %}{% endverbatim %} dans chaque fichier twig</p>
                    <a href="#" class="btn btn-success btn-lg">bouton sample</a>
                </div>
            {% endblock %}


            {% block body %}

            {% endblock %}

        </div>

        {% block footer %}
            {% include 'shared/footer.html.twig' %}
        {% endblock %}

        {% include 'shared/toasts.html.twig' %}

        {% block javascripts %}{% endblock %}
        <script>
            {#hidding js toast#}
            $(".toast-js").toast('hide');

            {#entry point on ready#}
            $(document).ready(function(){
                // applique la bonne couleur au logo
                colorize('.logo-filter');

                // ...affichage des flashs via des toasts'
                // cf: bootstrap.html.twig
                $(".toast-php").toast('show');
            });
            // affiche les messages toast JS
            function showFlash (msg) {
                $('#jsToast > .toast-body').html(msg);
                $(".toast-js").toast('show');
            }
            // Effectue une requette ajax Post
            function ajaxPost (url, data, callback, isJson = true) {
                var req = new XMLHttpRequest()
                req.open('POST', url)
                req.addEventListener('load', function () {
                    if (req.status >= 200 && req.status < 400) {
                        // Appelle la fonction callback en lui passant la réponse de la requête
                        callback(req.responseText)
                    } else {
                        callback(req.responseText, req.status + ' ' + req.statusText + ' ' + url)
                        console.error(req.status + ' ' + req.statusText + ' ' + url);
                    }
                })
                req.addEventListener('error', function () {
                    console.error('Erreur réseau avec l\'URL ' + url)
                })
                if (isJson) {
                    // Définit le contenu de la requête comme étant du JSON
                    req.setRequestHeader('Content-Type', 'application/json');
                    // Transforme la donnée du format JSON vers le format texte avant l'envoi
                    data = JSON.stringify(data);
                }
                req.send(data);
                return req;
            }
            // outils pour d'affichage de nombre avec des 0 devant
            // padZeros(3, 3) // return '003'
            function padZeros ($num, $nbZeros) {
                var $numSize = $num.toString().length;
                var $result = '';
                for (var i = 0; i < ($nbZeros - $numSize); i++) {
                    $result += '0';
                }
                $result += $num.toString();
                return $result;
            }
        </script>
    </body>

</html>